scalar JSON

# Reaction types enum
enum ReactionType {
  like
  dislike
  love
  angry
  sad
  wow
  haha
}

# Parent types enum
enum ParentType {
  post
  business
  pool
  blog
  company
  document
  image
}

# Reaction type
type Reaction {
  id: ID!
  parentId: String!
  parentType: String!
  userId: String!
  reaction: String!
  createdAt: Float!
  updatedAt: Float!
}

# Entity reactions response
type EntityReactionsResponse {
  reactions: JSON! # Record<string, number>
  userReactions: [String!]!
}

# Set reaction input
input SetReactionInput {
  parentId: String!
  parentType: ParentType!
  reaction: ReactionType!
}

# Get reactions filter input
input GetReactionsFilterInput {
  filter: JSON!
  sort: JSON
  limit: Int
  offset: Int
}

extend type Query {
  # Get reactions for entity
  getEntityReactions(
    parentId: String!
    parentType: String!
  ): EntityReactionsResponse!

  # Get reactions with filters
  getReactions(input: GetReactionsFilterInput!): [Reaction!]!
}

extend type Mutation {
  # Set reaction
  setReaction(input: SetReactionInput!): Reaction!

  # Reset reaction
  resetReaction(input: SetReactionInput!): Reaction
}
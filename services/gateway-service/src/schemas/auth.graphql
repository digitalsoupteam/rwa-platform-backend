type Mutation {
  getAuthMessage(address: String!): SignatureRequest!
  authenticate(address: String!, signature: String!): AuthResponse!
}

type AuthResponse {
  token: String!
}

type Query {
  me: User
}

type User {
  address: String!
  lastLogin: String
}

type SignatureRequest {
  domain: Domain!
  types: Types!
  primaryType: String!
  message: AuthMessage!
}

type Domain {
  name: String!
  version: String!
  chainId: Int!
}

type Types {
  Auth: [TypeProperty!]!
}

type TypeProperty {
  name: String!
  type: String!
}

type AuthMessage {
  wallet: String!
  nonce: String!
  message: String!
}

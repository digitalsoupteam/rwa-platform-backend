type Query {
  kycStatus: KYCStatus!
}

type Subscription {
    kycStatusUpdated: KYCStatus!
}

type Mutation {
  initiateKYC(provider: String!, data: KYCDataInput!): KYCInitiationResult!
}

type KYCStatus {
  status: KYCStatusEnum!
  provider: String
  lastVerified: String
  expiresAt: String
}

enum KYCStatusEnum {
  NONE
  PENDING
  APPROVED
  REJECTED
}

input KYCDataInput {
  firstName: String!
  lastName: String!
  dateOfBirth: String!
  documentType: String!
  country: String!
  additionalData: JSON
}

type KYCInitiationResult {
  verificationId: String!
  redirectUrl: String
  status: KYCStatusEnum!
}

scalar JSON